swagger: "2.0"
info:
  description: |
    The IonVision HTTP API definition.
  version: "0.3.4"
  title: "IonVision HTTP API"
basePath: "/api"
tags:
- name: "Scan Management"
  description: "Manipulate scanning with the device."
- name: "Scope Mode"
  description: "Manage the scope mode of the device."
- name: "User Management"
  description: "Set and read the currently set username."
- name: "Parameters"
  description: "Manipulate scan parameters saved on the device."
- name: "Projects"
  description: "Manipulate projects saved on the device."
- name: "Controller adjustment"
  description: "Adjust the devices internal controllers such as temperature and humidity."
- name: "Results"
  description: "View and manipulate scan results."
- name: "System Information"
  description: "Get data about the system."
- name: "Settings"
  description: "Adjust system settings."
- name: "Graph colours"
  description: "Manage stored scan visualisation colour scales."
- name: "Backup Management"
  description: "Manage backing up the device."
- name: "Miscellaneous"
  description: "Miscellaneous commands."

paths:
  /currentScan:
    get:
      tags:
      - "Scan Management"
      summary: "Check if a scan is ongoing and get information about it."
      produces:
      - "application/json"
      responses:
        200:
          description: "A scan is currently ongoing. The response also includes some information about the scan."
          schema:
            $ref: "#/definitions/scanInformation"
        404:
          description: "No scan is currently ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
    post:
      tags:
      - "Scan Management"
      summary: "Start a new scan if possible."
      description: "Starts a new scan using the current project and parameter preset. A new scan can only be started if there is no scan currently ongoing."
      produces:
      - "application/json"
      responses:
        201:
          description: "The new scan is now starting."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "Another scan has already been started or there is some other operation blocking starting a scan."
          schema:
            $ref: "#/definitions/standardResponse"
        507:
          description: "There is no space left on device to save the results that would be made."
          schema:
            $ref: "#/definitions/standardResponse"
    delete:
      tags:
      - "Scan Management"
      summary: "Stop the current scan if one is ongoin."
      produces:
      - "application/json"
      responses:
        200:
          description: "The scan is now stopping."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "No scan is currently ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /currentScan/comments:
    get:
      tags:
      - "Scan Management"
      summary: "Get the comments object associated with the ongoing or next scan."
      description: "Get the comments object associated with the ongoing or next scan. The comments object is automatically reset once a scan finishes and the previous comments object is saved to the result file of the just finished scan."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current comments object"
          schema:
            $ref: "#/definitions/scanComments"
    put:
      tags:
      - "Scan Management"
      summary: "Replace the comments object associated with the ongoing or next scan."
      description: "Add comments to the ongoing or next scan. Replaces the previous comments object. The /currentScan/comments object can first be fetched for editing using GET."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      - in: "body"
        name: "body"
        description: "The new comments object to replace the old one."
        required: true
        schema:
          $ref: "#/definitions/scanComments"
      responses:
        200:
          description: "Scan comments replaced."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The JSON object given as the body of the request was malformed."
          schema:
            $ref: "#/definitions/parameterSaveError"

  /currentUser:
    get:
      tags:
      - "User Management"
      summary: "Get the current username set for the device."
      description: "Get the username that will be saved to the results of all scans made with this device.."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current username."
          schema:
            $ref: "#/definitions/userInfo"
    put:
      tags:
      - "User Management"
      summary: "Set a new username for the device."
      description: "Replaces the previosuly set username. The username is just a string aappended to scan results and can be any string desired."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      - in: "body"
        name: "body"
        description: "The new username to replace the old one."
        required: true
        schema:
          $ref: "#/definitions/userInfo"
      responses:
        200:
          description: "The username was changed."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
            
  /scope:
    get:
      tags:
      - "Scope Mode"
      summary: "Check if the device is in scope mode."
      produces:
      - "application/json"
      responses:
        200:
          description: "The device is in scope mode. Includes the latest results once one full scan has elapsed."
          schema:
            $ref: "#/definitions/scanInformation"
        404:
          description: "The device is not in scope mode."
          schema:
            $ref: "#/definitions/standardResponse"
    post:
      tags:
      - "Scope Mode"
      summary: "Move the device to scope mode using the current scope mode parameters."
      produces:
      - "application/json"
      responses:
        201:
          description: "The device is now moving to scope mode."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "The device is already in scope mode, is scanning or is doing some other blocking operation."
          schema:
            $ref: "#/definitions/standardResponse"
    delete:
      tags:
      - "Scope Mode"
      summary: "Move the device back to idle."
      description: "This starts moving the device away from scope mode into idle. The change is not instant, the ongoing or just starting scan is completed before the device is idle again. New scans or scope mode can't be started before that. In rare cases the stop signal can hapen in a transitory state and scope scanning will continue even after the user stops it. In those cases simply attempt to stop the scope mode again until it actually stops."
      produces:
      - "application/json"
      responses:
        201:
          description: "The device is now moving to scope mode."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "The device is not in scope mode."
          schema:
            $ref: "#/definitions/standardResponse"
  /scope/latestResult:
    get:
      tags:
      - "Scope Mode"
      summary: "Get the latest scope mode result data if available."
      produces:
      - "application/json"
      responses:
        200:
          description: "The latest scope mode result data."
          schema:
            $ref: "#/definitions/scopeResults"
        404:
          description: "No latest scope mode result available. If scope mode is not ongoing, no results are available."
          schema:
            $ref: "#/definitions/standardResponse"
  /scope/parameters:
    get:
      tags:
      - "Scope Mode"
      summary: "Get the current scope mode parameters."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current scope mode parameters."
          schema:
            $ref: "#/definitions/scopeParameters"
    put:
      tags:
      - "Scope Mode"
      summary: "Set the current scope mode parameters."
      description: "Sets the current scope mode parameters. If scope mode is currently enabled, the currently used parameteres won't be updated unless scope mode is stopped and started again."
      parameters:
      - in: "body"
        name: "body"
        description: "The new scope mode parameters."
        required: true
        schema:
          $ref: "#/definitions/scopeParameters"
      produces:
      - "application/json"
      responses:
        200:
          description: "The scope mode parameters were set successfully."
          schema:
            $ref: "#/definitions/standardResponse"
    
  /currentParameter:
    get:
      tags:
      - "Parameters"
      summary: "Get the ID of the parameter preset currently in use."
      description: "Get the ID of the parameter preset that currently is used for all new scans. To access other parameter related functionality, use the /parameter/* endpoints."
      produces:
      - "application/json"
      responses:
        200:
          description: "The name of the currently used parameter preset."
          schema:
            $ref: "#/definitions/currentParameter"
        404:
          description: "There is no current parameter preset on the system."
          schema:
            $ref: "#/definitions/standardResponse"
        503:
          description: "A recently set parameter preset is still being loaded."
          schema:
            $ref: "#/definitions/loadedParameter"
    put:
      tags:
      - "Parameters"
      summary: "Set a new parameter preset to use for scanning."
      description: "Sets a new parameter preset for the device to use for new scans using the ID of the parameter. The parameter must be included in the current project for it to work here. To access other parameter related functionality, use the /parameter/* endpoints."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The ID of the parameter to set as current."
        required: true
        schema:
          $ref: "#/definitions/newParameterId"
      responses:
        201:
          description: "The parameters are being set up."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A ongoing scan is preventing changing the current parameter preset. Alternatively some other blocking operation is ongoing. An another parameter preset or a project being set up to the RTM could also cause this repsonse."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given parameter doesn't exists in the current project or at all. Alternatively the request body was malformed."
          schema:
            $ref: "#/definitions/standardResponse"
  /parameter:
    get:
      tags:
      - "Parameters"
      summary: "Get a list of names and ID's of all of the parameters on the device."
      produces:
      - "application/json"
      responses:
        200:
          description: "The list of parameter names and ID's."
          schema:
            $ref: "#/definitions/parameterList"
    post:
      tags:
      - "Parameters"
      summary: "Save a new parameter to the device."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      - in: "body"
        name: "body"
        description: "The definition object of the new parameter."
        required: true
        schema:
          $ref: "#/definitions/parameter"
      responses:
        201:
          description: "The new parameter was saved successfully."
          schema:
            $ref: "#/definitions/newParameterResponse"
        409:
          description: "There already exists a parameter with the same name or a blocking operation is ongoing (signified by the response message)."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The parameter definition object given as the body of the request was malformed."
          schema:
            $ref: "#/definitions/parameterSaveError"
        507:
          description: "There is no space left on device to save the new parameter."
          schema:
            $ref: "#/definitions/standardResponse"
  /parameter/{id}:
    get:
      tags:
      - "Parameters"
      summary: "Get a parameter definition object."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the requested parameter."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested parameter definition object."
          schema:
            $ref: "#/definitions/parameter"
        404:
          description: "A parameter with the given ID doesn't exist"
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Parameters"
      summary: "Update an existing parameter preset on the device."
      description: "Update a parameter that has already been created. This will only work if the parameter does not have any scan results that have used it saved on the device. Otherwise a new parameter must be created."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the parameter being updated."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The definition object of the updated parameter."
        required: true
        schema:
          $ref: "#/definitions/parameter"
      responses:
        200:
          description: "The parameter was updated successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A parameter with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The parameter definition object given as the body of the request was malformed."
          schema:
            $ref: "#/definitions/parameterSaveError"
    delete:
      tags:
      - "Parameters"
      summary: "Remove a parameter from the device."
      description: "Removes a parameter if it does not have any scan results that have used it saved on the device. If there are scan results that use the parameter, you must remove all scan results made with the parameter first. The correct results can be quickly found using the /parameter/{ID}/result endpoint."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the parameter that should be removed."
        required: true
        type: "string"
      responses:
        200:
          description: "The parameter was deleted."
          schema:
            $ref: "#/definitions/standardResponse"
        403:
          description: "The parameter could not be removed because there are results depending on it."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A parameter with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /parameter/{id}/metadata:
    get:
      tags:
      - "Parameters"
      summary: "Get just the metadata of the parameter."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the requested parameter."
        required: true
        type: "string"
      responses:
        200:
          description: "The metadata of the parameter."
          schema:
            $ref: "#/definitions/parameterMetadata"
        404:
          description: "A parameter with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
  /parameter/{id}/results:
    get:
      tags:
      - "Parameters"
      summary: "Get a list of ID's of scan results that have been measured using this parameter."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the requested parameter"
        required: true
        type: "string"
      responses:
        200:
          description: "The list of scan result ID's"
          schema:
            $ref: "#/definitions/parameterResultList"
        404:
          description: "A parameter with the given ID doesn't exist"
          schema:
            $ref: "#/definitions/standardResponse"
            
  /currentProject:
    get:
      tags:
      - "Projects"
      summary: "Get the name of the project currently in use"
      description: "Get the name of the project that currently is used for all new scans. To access other project related functionality, use the /project/* endpoints."
      produces:
      - "application/json"
      responses:
        200:
          description: "The name of the currently selected project."
          schema:
            $ref: "#/definitions/currentProject"
        404:
          description: "There is no current project on the system."
          schema:
            $ref: "#/definitions/standardResponse"
        503:
          description: "A recently set project is still being loaded."
          schema:
            $ref: "#/definitions/loadedProject"
    put:
      tags:
      - "Projects"
      summary: "Set a new project for use in scanning."
      description: "Sets a new project for the device to use in new scans using the name of the project. Loading a project to RTM RAM can take relatively long, to know when the loading finishes, listen on WebSocket messages. To access other project related functionality, use the /project/* endpoints."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The name of the project"
        required: true
        schema:
          $ref: "#/definitions/currentProject"
      responses:
        201:
          description: "The project is being downloaded"
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing or an another project or a parameter preset is currently being set up."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given project doesn't exists on the system. Alternatively the request body was malformed."
          schema:
            $ref: "#/definitions/standardResponse"
  /project:
    get:
      tags:
      - "Projects"
      summary: "Get a list of names of all of the projects on the device."
      produces:
      - "application/json"
      responses:
        200:
          description: "The list of names of projects on the device."
          schema:
            $ref: "#/definitions/projectList"
    post:
      tags:
      - "Projects"
      summary: "Save a new project to the device."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      - in: "body"
        name: "body"
        description: "The definition object of the new project."
        required: true
        schema:
          $ref: "#/definitions/project"
      responses:
        201:
          description: "The new project was saved successfully"
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "There already exists a project with the name or a blocking operation is ongoing (signified by the response message)."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The project definition object given as the body of the request was malformed."
          schema:
            $ref: "#/definitions/parameterSaveError"
        507:
          description: "There is no space left on device to save the new project."
          schema:
            $ref: "#/definitions/standardResponse"
  /project/{name}:
    get:
      tags:
      - "Projects"
      summary: "Get a project definition object."
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the requested project."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested project definition object."
          schema:
            $ref: "#/definitions/project"
        404:
          description: "A project with the given name doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Projects"
      summary: "Update an existing project on the device."
      description: "Update a project that has already been created. If there are scan results that have been scanned using this project and a parameter from this project, that parameter can not be removed from this project. You must remove that scan result from the device first."
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the project that should be updated."
        required: true
        type: "string" 
      - in: "body"
        name: "body"
        description: "The definition object of the updated project."
        required: true
        schema:
          $ref: "#/definitions/project"
      responses:
        200:
          description: "The project was updated successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        403:
          description: "A parameter was removed from the updated project that already has results depending on it and this project."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A project with the given name doesn't exist"
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The project definition object given as the body of the request was malformed."
          schema:
            $ref: "#/definitions/parameterSaveError"
    delete:
      tags:
      - "Projects"
      summary: "Remove a project from the device."
      description: "Removes a project from the device if there are no parameters or results depending on it. If there are parameters or results in the project, returns 403. The scan results that belong to this project can be quickly found using the /project/{name}/result endpoint."
      produces:
      - "application/json"
      parameters: 
      - name: "name"
        in: "path"
        description: "The name of the project to delete."
        required: true
        type: "string"
      responses:
        200:
          description: "The project was deleted successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        403:
          description: "The project could not be removed because there are results depending on it or."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A project with the given name doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /project/{name}/results:
    get:
      tags:
      - "Projects"
      summary: "Get a list of ID's of scan results that belong to this project."
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the requested project."
        required: true
        type: "string"
      responses:
        200:
          description: "The list of scan result ID's that belong to this project."
          schema:
            $ref: "#/definitions/projectResultList"
        404:
          description: "A project with the given name doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
  /project/{name}/sequence:
    get:
      tags:
      - "Projects"
      summary: "Get the sequence of parameter presets that is used when a measurement is done with the project."
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the requested project."
        required: true
        type: "string"
      responses:
        200:
          description: "The sequence of this project."
          schema:
            $ref: "#/definitions/parameterList"
        404:
          description: "A project with the given name doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Projects"
      summary: "Update the sequence of parameter presets that is used when a measurement is done with the project."
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the updated project."
        required: true
        type: "string" 
      - in: "body"
        name: "body"
        description: "The new parameter sequence for this project."
        required: true
        schema:
          $ref: "#/definitions/parameterList"
      responses:
        200:
          description: "The projects sequence was updated successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A project with the given name doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The posted sequence was malformed or the parameters in the sequence do not being in the project."
          schema:
            $ref: "#/definitions/parameterSaveError"

  /controller/sampleFlow:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current sample flow adjustment values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current sample flow adjustment values."
          schema:
            $ref: "#/definitions/controllerSetpointResponse"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current sample flow adjustment values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more sample flow adjustment values to change"
        required: true
        schema:
          $ref: "#/definitions/controllerSetpoint"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/sampleFlow/pid:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current sample flow pid controller values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current sample flow pid controller values."
          schema:
            $ref: "#/definitions/controllerPid"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current sample flow pid controller values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more sample flow pid controller values to change."
        required: true
        schema:
          $ref: "#/definitions/controllerPid"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/sampleFlow/directControl:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get whether the sample flow pump is directly adjusted."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current sample flow direct adjustment status"
          schema:
            $ref: "#/definitions/controllerDirectControl"
    put:
      tags:
      - "Controller adjustment"
      summary: "Directly adjust the sample flow pumps duty cycle."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new direct adjustment settings. If enabled is false, there is no need for the duty cycle value."
        required: true
        schema:
          $ref: "#/definitions/controllerDirectControl"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  /controller/circulatingGasFlow:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current circulating gas flow adjustment values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current circulating gas flow adjustment values."
          schema:
            $ref: "#/definitions/controllerSetpointResponse"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current circulating gas flow adjustment values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more circulating gas flow adjustment values to change"
        required: true
        schema:
          $ref: "#/definitions/controllerSetpoint"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/circulatingGasFlow/pid:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current circulating gas flow pid controller values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current circulating gas flow pid controller values."
          schema:
            $ref: "#/definitions/controllerPid"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current circulating gas flow pid controller values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more circulating gas flow pid controller values to change."
        required: true
        schema:
          $ref: "#/definitions/controllerPid"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/circulatingGasFlow/directControl:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get whether the circulating gas flow pump is directly adjusted."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current circulating gas flow direct adjustment status"
          schema:
            $ref: "#/definitions/controllerDirectControl"
    put:
      tags:
      - "Controller adjustment"
      summary: "Directly adjust the circulating gas flow pumps duty cycle."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new direct adjustment settings. If enabled is false, there is no need for the duty cycle value."
        required: true
        schema:
          $ref: "#/definitions/controllerDirectControl"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  /controller/circulatingGasTemperature:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current circulating gas temperature adjustment values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current temperature adjustment values."
          schema:
            $ref: "#/definitions/controllerSetpointResponse"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current circulating gas temperature adjustment values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more temperature adjustment values to change"
        required: true
        schema:
          $ref: "#/definitions/controllerSetpoint"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/circulatingGasTemperature/pid:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current circulating gas temperature pid controller values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current temperature pid controller values."
          schema:
            $ref: "#/definitions/controllerPid"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current circulating gas temperature pid controller values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more temperature pid controller values to change."
        required: true
        schema:
          $ref: "#/definitions/controllerPid"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/circulatingGasTemperature/directControl:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get whether the circulating gas temperature is directly adjusted."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current circulating gas temperature direct adjustment status"
          schema:
            $ref: "#/definitions/controllerDirectControl"
    put:
      tags:
      - "Controller adjustment"
      summary: "Directly adjust the circulating gas temperature heaters duty cycle."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new direct adjustment settings. If enabled is false, there is no need for the duty cycle value."
        required: true
        schema:
          $ref: "#/definitions/controllerDirectControl"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  /controller/sampleTemperature:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current sample gas temperature adjustment values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current temperature adjustment values."
          schema:
            $ref: "#/definitions/controllerSetpointResponse"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the sample circulating gas temperature adjustment values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more temperature adjustment values to change"
        required: true
        schema:
          $ref: "#/definitions/controllerSetpoint"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/sampleTemperature/pid:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current sample gas temperature pid controller values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current temperature pid controller values."
          schema:
            $ref: "#/definitions/controllerPid"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current sample gas temperature pid controller values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more temperature pid controller values to change."
        required: true
        schema:
          $ref: "#/definitions/controllerPid"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
        423:
          description: "The resource is not accessible, because direct control has been enabled."
          schema:
            $ref: "#/definitions/standardResponse"
  /controller/sampleTemperature/directControl:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get whether the sample temperature is directly adjusted."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current sample temperature direct adjustment status"
          schema:
            $ref: "#/definitions/controllerDirectControl"
    put:
      tags:
      - "Controller adjustment"
      summary: "Directly adjust the sample temperature heaters duty cycle."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new direct adjustment settings. If enabled is false, there is no need for the duty cycle value."
        required: true
        schema:
          $ref: "#/definitions/controllerDirectControl"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  /controller/ambientTemperature:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current ambient temperature value"
      produces:
      - "application/json"
      responses:
        200:
          description: "The current ambient temperature"
          schema:
            $ref: "#/definitions/controllerCurrentValue"
  /controller/circulatingGasPressure:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current circulating gas pressure adjustment values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current circulating gas pressure adjustment values."
          schema:
            $ref: "#/definitions/controllerMinMaxResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current circulating gas pressure adjustment values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more pressure adjustment values to change"
        required: true
        schema:
          $ref: "#/definitions/controllerMinMax"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  /controller/samplePressure:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current sample pressure value"
      produces:
      - "application/json"
      responses:
        200:
          description: "The current sample pressure"
          schema:
            $ref: "#/definitions/controllerCurrentValue"
  /controller/ambientPressure:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current ambient pressure value"
      produces:
      - "application/json"
      responses:
        200:
          description: "The current ambient pressure"
          schema:
            $ref: "#/definitions/controllerCurrentValue"
  /controller/circulatingGasHumidity:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current circulating gas humidity adjustment values."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current circulating gas humidity adjustment values."
          schema:
            $ref: "#/definitions/controllerMinMaxResponse"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current circulating gas humidity adjustment values."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "One or more humidity adjustment values to change"
        required: true
        schema:
          $ref: "#/definitions/controllerMinMax"
      responses:
        200:
          description: "The values were changed successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  /controller/sampleHumidity:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current sample humidity value"
      produces:
      - "application/json"
      responses:
        200:
          description: "The current sample humidity"
          schema:
            $ref: "#/definitions/controllerCurrentValue"
  /controller/ambientHumidity:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get current ambient humidity value"
      produces:
      - "application/json"
      responses:
        200:
          description: "The current ambient humidity"
          schema:
            $ref: "#/definitions/controllerCurrentValue"
  /controller/ionisation:
    get:
      tags:
      - "Controller adjustment"
      summary: "Get the current status of ionisation / XAPPI (Atmospheric Pressure soft X-ray Photon Ionisation Module)."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current status of ionisation / XAPPI."
          schema:
            $ref: "#/definitions/controllerIonisationStatus"
    put:
      tags:
      - "Controller adjustment"
      summary: "Change the current status of ionisation / XAPPI."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new status for ionisation / XAPPI."
        required: true
        schema:
          $ref: "#/definitions/controllerIonisationStatus"
      responses:
        200:
          description: "The status was changed successfully"
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The given values were malformed."
          schema:
            $ref: "#/definitions/controllerError"
  
  /results:
    get:
      tags:
      - "Results"
      summary: "Search the scan results that are stored on the device."
      produces:
      - "application/json"
      - "application/zip"
      parameters:
      - in: "query"
        name: "max_results"
        description: "How many results to fetch at a time. May be limited if the results are too large."
        required: false
        type: "integer"
        default: 10
      - in: "query"
        name: "page"
        description: "If there are more results than maxResults, the results are divided into maxResults length pages. List results from this page."
        required: false
        type: "integer"
        default: 1
      - in: "query"
        name: "search"
        description: "Filter the results using this free form text search. It searches from the comments object, the name of the used parameter preset, the name of the user who performed the scan and the project used for the scan."
        required: false
        type: "string"
        default: ""
      - in: "query"
        name: "start_date"
        description: "The earliest date from which the data is searched from."
        required: false
        type: "string"
        format: "datetime"
      - in: "query"
        name: "end_date"
        description: "The latest date to which the data is searched to."
        required: false
        type: "string"
        format: "datetime"
      - in: "query"
        name: "sort_by"
        description: "Sort the results by."
        required: false
        type: "string"
        enum:
          - "date_asc"
          - "date_dsc"
        default: "date_dsc"
      - in: "query"
        name: "only_metadata"
        description: "Get only limited metadata of the results instead of full result objects."
        required: false
        type: "boolean"
      responses:
        200:
          description: "A list of scan results. If Accept header is application/zip, return a zip file instead."
          schema:
            $ref: "#/definitions/scanResultList"
        400:
          description: "The Accept-header is missing from the request."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "No results were found with the given parameters."
          schema:
            $ref: "#/definitions/standardResponse"
        406:
          description: "The Accept-header has a non-supported value."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "Invalid query parameters. For example negative page."
          schema:
            $ref: "#/definitions/standardResponse"
  /results/latest:
    get:
      tags:
      - "Results"
      summary: "Get the data object of the latest scan result."
      description: "Get the data object of the latest scan result once it has been processed. Please note that it can take some time for the device to process the scan result data after a scan has already been finished."
      produces:
      - "application/json"
      responses:
        200:
          description: "The data object of latest scan result."
          schema:
            $ref: "#/definitions/scanResult"
        404:
          description: "There are no scan results stored on the device."
          schema:
            $ref: "#/definitions/standardResponse"
  /results/id/{id}:
    get:
      tags:
      - "Results"
      summary: "Get the complete data object of a scan result."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the requested scan result."
        required: true
        type: "string"
      responses:
        200:
          description: "The scan result data object."
          schema:
            $ref: "#/definitions/scanResult"
        404:
          description: "A scan result with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
    delete:
      tags:
      - "Results"
      summary: "Remove a scan result from the device."
      produces:
      - "application/json"
      parameters: 
      - name: "id"
        in: "path"
        description: "The ID of the scan result."
        required: true
        type: "string"
      responses:
        200:
          description: "The scan result was deleted."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A scan result with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /results/id/{id}/copy:
    post:
      tags:
      - "Results"
      summary: "Copy the data of a scan result to an external location."
      description: "This endpoint can be used to automatically copy selected result data to an external location as JSON files. For example, it is possible to plug in an USB memory stick into the device and copy results to it."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the copied scan result."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The parameters for the copying process."
        required: true
        schema:
          $ref: "#/definitions/scanResultCopyBody"
      responses:
        202:
          description: "The copy process was started."
          schema:
            $ref: "#/definitions/standardResponse"
        400:
          description: "The given destination type or the destination itself doesn't exist."
          schema:
            $ref: "#/definitions/backupError"
        404:
          description: "A scan result with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A another copy process was already started and is still ongoing or an another blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        500:
          description: "There was an error handling a valid request. For example, a connection error or write protected device. See the response message for more details."
          schema:
            $ref: "#/definitions/standardResponse"
        507:
          description: "There is no space left on the destination to save the result copy."
          schema:
            $ref: "#/definitions/standardResponse"
  /results/id/{id}/comments:
    get:
      tags:
      - "Results"
      summary: "Get the comment object of a scan result."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the scan result."
        required: true
        type: "string"
      responses:
        200:
          description: "The comments object of a scan result."
          schema:
            $ref: "#/definitions/scanComments"
        404:
          description: "A scan result with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
    put:
      tags:
      - "Results"
      summary: "Update the comments object of a scan result."
      description: "Replaces the previous comments object of a scan result. The /results/id/{id}/comments object can first be fetched for editing using GET."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the scan result."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The updated comments object."
        required: true
        schema:
          $ref: "#/definitions/scanComments"
      responses:
        200:
          description: "The comments object was updated successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "A scan result with the given ID doesn't exist."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The JSON object given as the body of the request was malformed."
          schema:
            $ref: "#/definitions/parameterSaveError"

  /system/status:
    get:
      tags:
      - "System Information"
      summary: "Get the current status of system parameters like storage and gas filter usage."
      description: "Get the current status of some system parameters. In addition to storage space status, gas filter usage and the currenty LAN IP address of the device, the endpoint also returns any blocking operations that are ongoing on the device. A link that refers to the API endpoint that can be used to find out more about the operation is included."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current status of system parameters."
          schema:
            $ref: "#/definitions/systemStatus"
  /system/status/resetGasFilter:
    post:
      tags:
      - "System Information"
      summary: "Reset the gas filter usage counter."
      produces:
      - "application/json"
      responses:
        200:
          description: "The gas filter usage counter was reset successfully."
          schema:
            $ref: "#/definitions/standardResponse"
  /system/calibration:
    get:
      tags:
      - "System Information"
      summary: "Get information about the self calibration process of the system."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current status of self calibration process of the system."
          schema:
            $ref: "#/definitions/systemCalibrationInfo"
    post:
      tags:
      - "System Information"
      summary: "Start a new system self calibration process."
      produces:
      - "application/json"
      responses:
        202:
          description: "The self calibration process was started successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A another calibration process was already started and is still ongoing or a blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        
  /system/devices:
    get:
      tags:
      - "System Information"
      summary: "Get a list of external devices connected to the device."
      produces:
      - "application/json"
      responses:
        200:
          description: "A list of external devices connected to the device."
          schema:
            $ref: "#/definitions/systemDeviceList"
  /system/update:
    get:
      tags:
      - "System Information"
      summary: "Get the current status of system software updating."
      produces:
      - "application/json"
      responses:
        200:
          description: "Information about a system software update."
          schema:
            $ref: "#/definitions/systemUpdateStatus"
        404:
          description: "No system software update is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
    post:
      tags:
      - "System Information"
      summary: "Start a system software update."
      description: "Start the system software updating process immediately using the given parameters. This can take a long time during which the device is unusable. As errors can happen, make sure you have made backups of the device."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The system software update parameters."
        required: true
        schema:
          $ref: "#/definitions/systemUpdateParameters"
      responses:
        202:
          description: "System software update started."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /system/update/info:
    get:
      tags:
      - "System Information"
      summary: "Get information about possible system software updates."
      produces:
      - "application/json"
      responses:
        200:
          description: "Information about system software updates."
          schema:
            $ref: "#/definitions/systemUpdateInfo"
  /system/debug:
    get:
      tags:
      - "System Information"
      summary: "Get debug information about the device for sending to Olfactomics."
      description: "This endpoint can be used to produce raw data that can help Olfactomics to debug possible problems with the device. It has no use in every-day use of the device. You can be instructed to use this endpoint in case of contacting support."
      produces:
      - "application/json"
      responses:
        200:
          description: "The generated debug information."
          schema:
            type: "file"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /system/debug/logs:
    get:
      tags:
      - "System Information"
      summary: "Get full application log files as a zip file. Could be useful for additional debugging."
      produces:
      - "application/zip"
      responses:
        200:
          description: "The log files as a zip file."
          schema:
            type: "file"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /system/errors:
    get:
      tags:
      - "System Information"
      summary: "Get a list of possible ongoing system errors."
      description: "Get a list of ongoing system errors. In addition to this endpoint, the errors are broadcast using the WebSocket API as soon as they appear. After being broadcast through WebScoket, the errors are found from this endpoint as long as their source persists."
      produces:
      - "application/json"
      responses:
        200:
          description: "A list of ongoing system error codes."
          schema:
            type: "array"
            items:
              type: "string"
        404:
          description: "No system errors."
  /system/reset:
    get:
      tags:
      - "System Information"
      summary: "Get information about system reset operations."
      produces:
      - "application/json"
      responses:
        200:
          description: "There is a system reset ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        404:
          description: "No system reset operation ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
    post:
      tags:
      - "System Information"
      summary: "Reset the system or parts of it to default settings."
      description: "This endpoint can be used to fully or partially reset the system. For partial reset, set the wanted parameters to true. For full reset, set all of the parameters and the allData parameter to true. If allData is true but some other paramneters are false, an error is returned. Same happens if some of the paraneters are not defined at all. Make sure you have backed up any data you are about to remove using this endpoint."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Parameters for the reset."
        required: true
        schema:
          $ref: "#/definitions/systemResetParameters"
      responses:
        202:
          description: "The system reset operation was started."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        422:
          description: "The parameter object given as the body of the request was malformed or did not include all of the required fields."
          schema:
            $ref: "#/definitions/standardResponse"
  /system/licenses:
    get:
      tags:
      - "System Information"
      summary: "Get a list of software licenses the device uses."
      description: "Get the list of all of the open source licenses of software and libraries used in this device."
      produces:
      - "application/json"
      responses:
        200:
          description: "List of software licenses the device uses."
          schema:
            $ref: "#/definitions/systemLicenseList"
            
  /settings/clock:
    get:
      tags:
      - "Settings"
      summary: "Get the current system clock information."
      produces:
      - "application/json"
      responses:
        200:
          description: "System clock information."
          schema:
            $ref: "#/definitions/settingsClockInfo"
    put:
      tags:
      - "Settings"
      summary: "Set the current system clock information."
      description: "Set the system clock time, timezone and internet updating. The system clock is used to timestamp all of the scans and other operations made with the device."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new system clock information"
        required: true
        schema:
          $ref: "#/definitions/settingsClockInfoPut"
      responses:
        200:
          description: "The system clock information was updated successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
    options:
      tags:
      - "Settings"
      summary: "Get a list of timezones supported by the system."
      produces:
      - "application/json"
      responses:
        200:
          description: "A list of all of the timezones supported by the system."
          schema:
            $ref: "#/definitions/settingsClockInfoOptions"
  /settings/keyboard:
    get:
      tags:
      - "Settings"
      summary: "Get the current system keyboard layout."
      produces:
      - "application/json"
      responses:
        200:
          description: "The current system keyboard layout."
          schema:
            $ref: "#/definitions/settingsKeyboardInfoExtra"
    put:
      tags:
      - "Settings"
      summary: "Set the current system keyboard layout."
      description: "Set the keyboard layout used for all USB keyboards plugged into the system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The new system keyboard information."
        required: true
        schema:
          $ref: "#/definitions/settingsKeyboardInfo"
      responses:
        200:
          description: "The system keyboard layout was updated successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
  /settings/keyboard/layout:
    get:
      tags:
      - "Settings"
      summary: "Get all keyboard layouts supported by the system."
      produces:
      - "application/json"
      responses:
        200:
          description: "A list of all of the keyboard layouts supported by the system."
          schema:
            $ref: "#/definitions/settingsKeyboardLayouts"
  /settings/keyboard/layout/{layout}:
    get:
      tags:
      - "Settings"
      summary: "Get details of an individual keyboard layout."
      produces:
      - "application/json"
      parameters:
      - name: "layout"
        in: "path"
        description: "The name of the requested keyboard layout."
        required: true
        type: "string"
      responses:
        200:
          description: "A list variants supported by the layout."
          schema:
            $ref: "#/definitions/settingsKeyboardLayoutInfo"

  /graphColour:
    get:
      tags:
      - "Graph colours"
      summary: "Get the metadata of all colour scales stored on the device."
      produces:
      - "application/json"
      responses:
        200:
          description: "List of colour scale metadata."
          schema:
            $ref: "#/definitions/graphColourList"
    post:
      tags:
      - "Graph colours"
      summary: "Add a new colour scale to the device."
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The colour scale data to add."
        required: true
        schema:
          $ref: "#/definitions/graphColourNew"
      responses:
        201:
          description: "The colour scale was added successfully."
          schema:
            $ref: "#/definitions/graphColourNewResponse"
        507:
          description: "The maximum colour scale amount limit has been reached. Remove old ones before adding new."
          schema:
            $ref: "#/definitions/standardResponse"
  /graphColour/{id}:
    get:
      tags:
      - "Graph colours"
      summary: "Get details of an individual colour scale."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the colour scale."
        required: true
        type: "integer"
      responses:
        200:
          description: "The details of a colour scale."
          schema:
            $ref: "#/definitions/graphColourDetails"
    delete:
      tags:
      - "Graph colours"
      summary: "Delete a colour scale from the device."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the colour scale."
        required: true
        type: "integer"
      responses:
        200:
          description: "The colour scale was removed successfully."
          schema:
            $ref: "#/definitions/standardResponse"

  /backups:
    get:
      tags:
      - "Backup Management"
      summary: "Get information about backup or restore operations."
      description: "Get information about either backup or restore operations if ones are ongoing. Otherwise returns information about requirements for backing the device up. For an ongoing operation, the type of the operation is indicated by the \"operation\" field of the response object."
      produces:
      - "application/json"
      responses:
        200:
          description: "There is a backup or restore operation ongoing."
          schema:
            $ref: "#/definitions/backupStatus"
        404:
          description: "There is no backup or restore operation ongoing. Information for making a backup."
          schema:
            $ref: "#/definitions/backupInfo"
  /backups/backup:
    post:
      tags:
      - "Backup Management"
      summary: "Back up the whole device to an external device."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Properties for choosing the destination of the backup."
        required: true
        schema:
          $ref: "#/definitions/backupNew"
      responses:
        202:
          description: "The backup process was started successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        400:
          description: "The given destination type or the destination itself doesn't exist."
          schema:
            $ref: "#/definitions/backupError"
        409:
          description: "An another backup or restore process was already started and is still ongoing. Alternatively an another blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        500:
          description: "There was a error handling a valid request. For example, a connection error or write protected device."
          schema:
            $ref: "#/definitions/standardResponse"
        507:
          description: "There is no storage space left on the destination to save the backup file."
          schema:
            $ref: "#/definitions/standardResponse"
  /backups/restore:
    post:
      tags:
      - "Backup Management"
      summary: "Restore the whole device from an external device."
      description: "Restore the whole device from an external device. Before the restore is started, all local data on the device is cleared. Make sure you have backed up any data you are about to remove using this endpoint."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/backupRestore"
      responses:
        202:
          description: "The restore process was started successfully."
          schema:
            $ref: "#/definitions/standardResponse"
        400:
          description: "The given data source type or the data source itself doesn't exist."
          schema:
            $ref: "#/definitions/backupError"
        409:
          description: "An another backup or restore process was already started and is still ongoing. Alternatively an another blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
        500:
          description: "There was a error handling a valid request. For example, an error connecting to the source device."
          schema:
            $ref: "#/definitions/standardResponse"
    options:
      tags:
      - "Backup Management"
      summary: "Get all possible backup sources that could be restored."
      responses:
        200:
          description: "The possible backup sources. A empty list if no backups sources are found."
          schema:
            $ref: "#/definitions/backupRestoreList"

  /reboot:
    post:
      tags:
      - "Miscellaneous"
      summary: "Reboot the system."
      responses:
        200:
          description: "The system is rebooting NOW!"
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"      
  /shutdown:
    post:
      tags:
      - "Miscellaneous"
      summary: "Shut down the system."
      parameters:
      - in: "query"
        name: "force"
        description: "Force the shutdown, even if some operation is ongoing. This is not guaranteed to work in all situations."
        required: false
        type: "boolean"
        default: false
      responses:
        200:
          description: "The system is shutting down NOW!"
          schema:
            $ref: "#/definitions/standardResponse"
        409:
          description: "A blocking operation is ongoing."
          schema:
            $ref: "#/definitions/standardResponse"
      
definitions:
  standardResponse:
    type: "object"
    description: "A standard response giving a human friendly success/error message."
    properties:
      message:
        type: "string"
        
  scanInformation:
    type: "object"
    properties:
      progress:
        type: "integer"
        description: "The progress of the scan as a percentage integer."
  scanComments:
    type: "object"
    description: "The comment object of a scan. A freeform JSON object."
    
  scopeResults:
    type: "object"
    description: "Result data object from the scope mode"
    properties:
      usv:
        type: "integer"
      ucv:
        type: "array"
        items:
          type: "number"
      intensityTop:
        type: "array"
        items:
          type: "number"
      intensityBottom:
        type: "array"
        items:
          type: "number"
  scopeParameters:
    type: "object"
    description: "Parameters for running the scope mode"
    properties:
      ucvStart:
        type: "number"
      ucvStop:
        type: "number"
      usv:
        type: "number"
      vb:
        type: "number"
      pp:
        type: "number"
      pw:
        type: "number"
      sampleAverages:
        type: "integer"
      sampleFlowControl:
        type: "integer"
      circulatingGasFlowControl:
        type: "integer"
    
  userInfo:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The username to add to scan results."
        example: "John Doe"
    
  currentParameter:
    type: "object"
    description: "The identifying information of the current parameter."
    properties:
      parameter:
        type: "object"
        properties:
          id:
            type: "string"
            description: "The ID of the current parameter."
          name:
            type: "string"
            description: "The name of the current parameter."
  loadedParameter:
    type: "object"
    description: "The identifying information of the current parameter when it is still being loaded to the RTM."
    allOf:
    - $ref: "#/definitions/standardResponse"
    - $ref: "#/definitions/currentParameter"
  newParameterId:
    type: "object"
    properties:
      parameter:
        type: "string"
        description: "The ID of the new parameter."
  newParameterResponse:
    type: "object"
    properties:
      parameter:
        type: "string"
        description: "The ID of the created parameter preset."
  parameterList:
    type: "array"
    items:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the parameter."
        name:
          type: "string"
          description: "The name of the parameter"
  parameter:
    type: "object"
    description: "The full definition object of a parameter preset."
  parameterMetadata:
    type: "object"
    description: "The metadata of a parameter."
    properties:
      Id:
        type: "string"
        description: "The internal ID of the parameter."
        example: "f5b0269a-a38c-4fae-9e06-ead1490e5331"
      Name:
        type: "string"
        description: "The name of the parameter."
      DateEdited:
        type: "string"
        description: "The last time the parameter was edited."
        format: "datetime"
        example: "2018-11-09T07:37:00Z"
      Description:
        type: "string"
        description: "The description text of the parameter." 
  parameterSaveError:
    type: "object"
    description: "Error descriping a parsing or validation error while processing a parameter JSON."
    properties:
      message:
        type: "string"
        description: "A human readable error text."
        example: "JSON parsing error on line 42"
      extract:
        type: "string"
        description: "A string showing where the error was."
        example: ".. }a, {..."
  parameterResultList:
    type: "array"
    description: "List of scan ID's that have been scanned using a parameter."
    items:
      type: "string"
      description: "The ID of a scan result that can be found from the system."
        
  currentProject:
    type: "object"
    properties:
      project:
        type: "string"
        description: "The name of the current project."
  loadedProject:
    type: "object"
    allOf:
    - $ref: "#/definitions/standardResponse"
    - $ref: "#/definitions/currentProject"
  projectList:
    type: "array"
    items:
      type: "string"
      description: "The name of a project."
  project:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the project."
      parameters:
        $ref: "#/definitions/parameterList"
  projectResultList:
    type: "array"
    description: "List of scan ID's that belong to a project."
    items:
      type: "string"
      description: "The ID of a scan result that can be found from the system."
      
  controllerCurrentValue:  
    type: "object"
    description: "The current value of a controller"
    properties:
        currentValue:
          type: "number"
          description: "The current value of the controller."
  controllerMinMax:
    type: "object"
    description: "Defines a minumum and maximum value a controller should get."
    properties:
      min:
        type: "number"
        description: "The minimum value the controller should get."
      max:
        type: "number"
        description: "The maximum value the controller should get."
  controllerMinMaxResponse:
    description: "Defines a minumum and maximum value a controller should get and its current value."
    allOf:
    - $ref: "#/definitions/controllerMinMax"
    - $ref: "#/definitions/controllerCurrentValue"
  controllerSetpoint:
    description: "Defines a setpoint value and limits for a controller."
    allOf:
    - $ref: "#/definitions/controllerMinMax"
    - type: "object"
      properties:
        setpoint:
          type: "number"
          description: "The setpoint where the controller aims to be."
  controllerSetpointResponse:
    description: "Defines a setpoint value, limits for a controller and its current value"
    allOf:
    - $ref: "#/definitions/controllerSetpoint"
    - $ref: "#/definitions/controllerCurrentValue"
  controllerPid:
    type: "object"
    description: "Defines values set for a PID controller."
    properties:
      p:
        type: "number"
        description: "The PID controller proportional term."
      i:
        type: "number"
        description: "The PID controller integral term."
      d:
        type: "number"
        description: "The PID controller derivative term."
      iMinWindup:
        type: "number"
        description: "The PID controller minumum integral error."
      iMaxWindup:
        type: "number"
        description: "The PID controller maximum integral error."
      hysteresis:
        type: "number"
        description: "The PID controller hysteresis."
  controllerDirectControl:
    type: "object"
    description: "Values to directly control the duty cycle of a controller."
    properties:
      enabled:
        type: "boolean"
        description: "Set to true to allow direct control."
      dutyCycle:
        type: "integer"
        minimum: 0
        maximum: 100
        description: "Percentage value reprecenting the controllers duty cycle."
  controllerError:
    description: "Error object for setting controller properties."
    allOf:
    - $ref: "#/definitions/standardResponse"
    - type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              field:
                type: "string"
                description: "The JSON field in which the error was in."
              message:
                type: "string"
                description: "A human readable description of the error."
  controllerIonisationStatus:
    type: "object"
    description: "Status of ionisation / XAPPI."
    properties:
      enabled:
        type: "boolean"
        description: "True if ionisation / XAPPI is enabled."
        
  scanResultList:
    type: "object"
    description: "A list of scan results that were found when searching the device results data."
    properties:
      meta:
        type: "object"
        properties:
          page:
            type: "number"
            description: "The current results page."
          maxResults:
            type: "number"
            description: "The amount of results on page."
          totalResults:
            type: "number"
            description: "The amount of results found in total."
      results:
        type: "array"
        items:
          $ref: "#/definitions/scanResult"
  scanResult:
    type: "object"
    description: "The full definition object of a scan result."
  scanResultCopyBody:
    type: "object"
    description: "Settings for copying a scan result to external storage."
    properties:
      destinationType:
        type: "string"
        enum:
        - "usb_storage"
        description: "The type of the destination."
        example: "usb_storage"
      destination:
        type: "string"
        description: "The destination to copy the data to."
        example: "/dev/sdb0"
      copyParameter:
        type: "boolean"
        description: "True if the parameter preset used for the result should also be copied."
  
  systemStatus:
    type: "object"
    description: "Status information about the system."
    properties:
      blockingOperationOngoing:
        type: "boolean"
        description: "True if there is some endpoint blocking operation ongoing."
      blockingOperationHref:
        type: "string"
        description: "A link to the endpoint of the blocking operation."
        example: "/backups"
      connectedUsers:
        type: "number"
        description: "The amount of WebSocket clients connected to the device."
      address:
        type: "string"
        description: "The IP address of the system. Can be used to access the API and user interface from external devices."
        example: "192.168.0.1"
      systemStorage:
        type: "object"
        properties:
          used:
            type: "integer"
            description: "Amount of used storage on device in bits."
          total:
            type: "integer"
            description: "Amount of total storage on device in bits."
      gasFilter:
        type: "object"
        properties:
          lastChanged:
            type: "string"
            format: "datetime"
            description: "The time the module was last changed."
            example: "2019-05-13T10:42:11Z"
          currentUses:
            type: "integer"
            description: "Amount of times the current module has been used."
          maxUses:
            type: "integer"
            description: "Amount of total usage times the module should have."
  systemCalibrationInfo:
    type: "object"
    description: "Error message given if a backup endpoint was given invalid query parameters."
    properties:
      lastConducted:
        type: "string"
        format: "datetime"
  systemDeviceNameless:
    description: "Information about an external device connected to this device."
    type: "object"
    properties:
      location:
        type: "string"
        description: "The location of the external device in the internal system of the device."
        example: "/dev/sdb0"
      type:
        type: "string"
        description: "The type of the external device."
        example: "usb_storage"
  systemDevice:
    description: "Information about an external device connected to this device."
    allOf:
    - $ref: "#/definitions/systemDeviceNameless"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "A name for the device. For example, memory sticks usually have a name shown in the systems file manager when they are plugged in."
          example: "32GB USB Memory"
  systemUpdateStatus:
    description: "The current status of updating the system software."
    type: "object"
    properties:
      progress:
        type: "integer"
        description: "Progress of the ongoing update process"
        example: 56
      updateId:
        type: "string"
        description: "The id of the source the update is applied from."
        example:  "usb:///media/pi/usb/update.zip"
  systemUpdateParameters:
    description: "The current status of updating the system software."
    type: "object"
    properties:
      updateId:
        type: "string"
        description: "The id of the source the update should be applied from."
        example: "usb:///media/pi/usb/update.zip"
  systemUpdateInfo:
    description: "Information about possible system software updates."
    type: "object"
    properties:
      currentVersion:
        type: "string"
        description: "The current system software version."
        example: "1.0.0"
      currentRtmVersion:
        type: "string"
        description: "The current realtime module software version."
        example: "00.99"
      availableVersions:
        type: "array"
        description: "All available update paths."
        items:
          type: "object"
          description: "A software version that the system can be updated to."
          properties:
            id:
              type: "string"
              description: "A unique id for the update. This id is quaranteed to be usable as long as system is not restarted and usb devices are not removed."
              example: "usb:///media/pi/usb/update.zip"
            version:
              type: "string"
              example: "1.1.0"
            source:
              type: "string"
              description: "The source from which the software update will be installed from."
              enum:
              - "usb"
              - "internet"
              example: "usb"
            changelog:
              type: "string"
              description: "A human readable changelog in English."
              example: "- Updated some stuff\n- Bugfixes"
  systemDeviceList:
    type: "array"
    description: "Lis of external devices plugged into the system."
    items:
      $ref: "#/definitions/systemDevice"
  systemResetParameters:
    description: "Parameters for resetting the system."
    type: "object"
    properties:
      results:
        type: "boolean"
        description: "If true, all scan results in the system will be removed."
      allData:
        type: "boolean"
        description: "If true, all data in the system will be removed. Requires all other parameters to be true as well."
  systemLicenseList:
    type: "array"
    description: "List of licenses of open source software and libraries used in the system software."
    items:
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the software or library."
          example: "brorand"
        licenseName:
          type: "string"
          description: "The name of the license."
          example: "MIT"
        licenseText:
          type: "string"
          description: "The full license text."
        website:
          type: "string"
          description: "The website of the software or library."
          example: "https://github.com/indutny/brorand"
          
  settingsClockInfo:
    type: "object"
    description: "The current date and time settings of the system."
    properties:
      utcTime:
        type: "string"
        format: "datetime"
        description: "The current date and time formateed in ISO 8601 style."
        example: "2018-01-01T00:00:00Z"
      timezone:
        type: "object"
        properties:
          offset:
            type: "number"
            description: "The UTC offset of the timezone."
            example: 2
          timezone:
            type: "string"
            description: "The name of the timezone."
            example: "Europe/Helsinki"
      updateFromInternet:
        type: "boolean"
        description: "Attempt to automatically update the time from internet if possible."
  settingsClockInfoPut:
    type: "object"
    description: "Parameters for changing date and time settings of the system."
    properties:
      utcTime:
        type: "string"
        format: "datetime"
        description: "The current date and time in ISO 8601 style."
        example: "2018-01-01T00:00:00Z"
      timezone:
        type: "string"
        description: "The name of the timezone."
        example: "Europe/Helsinki"
      updateFromInternet:
        type: "boolean"
        description: "Attempt to automatically update the time from internet if possible."
  settingsClockInfoOptions:
    type: "array"
    description: "A list of timezone cities and UTC offsets."
    items:
      type: "object"
      properties:
        offset:
          type: "number"
          description: "The UTC offset of the timezone."
        timezone:
          type: "string"
          description: "The name of the timezone."
    example: 
    - timezone: "Europe/London"
      offset: 0
    - timezone: "Europe/Helsinki"
      offset: 2
    - timezone: "Asia/Shanghai"
      offset: 8
    
  settingsKeyboardInfo:
    type: "object"
    properties:
      layout:
        type: "string"
        description: "The name of the current keyboard layout."
      variant:
        type: "string"
        description: "The name of the current variant of the keyboard layout. Undefined means default/no variant."
  settingsKeyboardInfoExtra:
    allOf:
    - $ref: "#/definitions/settingsKeyboardInfo"
    - type: "object"
      properties:
        model:
          type: "string"
          description: "The name of the current keyboard model used."
  settingsKeyboardLayouts:
    type: "array"
    items:
      type: "string"
      description: "The name of a supported keyboard layout."
  settingsKeyboardLayoutInfo:
    type: "object"
    properties:
      variants:
        type: "array"
        description: "List of variants supported by the layout. Undefined is also always supported as default/no variant."
        items:
          type: "string"
          description: "The name of a variant supported by the layout."

  graphColourCommon:
    type: "object"
    properties:
      Name:
        type: "string"
        example: "Colour 1"
        description: "The human readable name for the colour scale."
  graphColourCommonEdited:
    allOf:
    - $ref: "#/definitions/graphColourCommon"
    - type: "object"
      properties:
        LastEdited:
          type: "string"
          example: "2020-09-07T13:27:20Z"
          description: "The time the colour scale was last edited."
  graphColourColours:
    type: "object"
    properties:
      Colours:
        type: "array"
        description: "An array of colour values."
        items:
          type: "object"
          properties:
            Point:
              type: "number"
              minimum: 0
              maximum: 1
              description: "The point on a scale from 0 to 1 (0%-100%) where the colour fits"
            Colour:
              type: "string"
              example: "rgb(0, 0, 255)"
              description: "The colour code of the point in format rgb(0, 0, 0)."
  graphColourList:
    type: "array"
    description: "List of the metadata of all of the graph colours stored on the device."
    items:
      allOf:
      - type: "object"
        properties:
          Id:
            type: "integer"
            description: "The device-unique ID of the colour scale."
      - $ref: "#/definitions/graphColourCommonEdited"
  graphColourNew:
    description: "Data required for creating a new graph colour scale."
    allOf:
    - $ref: "#/definitions/graphColourCommon"
    - $ref: "#/definitions/graphColourColours"
  graphColourNewResponse:
    description: "Response after creating a graph colour scale object telling the ID of the new colour object."
    allOf:
    - $ref: "#/definitions/standardResponse"
    - type: "object"
      properties:
        createdId:
          type: "integer"
          description: "The device-unique ID of the created colour scale."
  graphColourDetails:
    description: "The details of graph colour scale stored on the device."
    allOf:
    - $ref: "#/definitions/graphColourCommonEdited"
    - $ref: "#/definitions/graphColourColours"

  backupInfo:
    description: "Metadata about backing up the device."
    type: "object"
    properties:
      backupRequiredSpace:
        type: "integer"
        description: "Amount of free storage needed on an external device for a backup in bits"
        example: 128000000000
  backupStatus:
    description: "Status message for backing up the device."
    type: "object"
    properties:
      operation:
        type: "string"
        description: "Describes whether the operation is a backup or restore operation."
        example: "backup"
        enum:
         - "backup"
         - "restore"
      progress:
        type: "integer"
        description: "Progress of the ongoing backup or restore operation as percentage."
        example: 56
      destination:
        $ref: "#/definitions/systemDeviceNameless"
  backupNew:
    type: "object"
    properties:
      destinationType:
        type: "string"
        description: "The type of the destination."
        enum:
        - "usb_storage"
      destination:
        type: "string"
        example: "/dev/sdb0"
        description: "The destination to back up the data to."
  backupError:
    description: "Error message given if a backup endpoint was given invalid query parameters."
    allOf:
    - $ref: "#/definitions/standardResponse"
    - type: "object"
      properties:
        invalidKey:
          type: "string"
          description: "The JSON key where the error was."
          example: "destinationType"
  backupRestore:
    type: "object"
    properties:
      locationType:
        type: "string"
        description: "The type of the location."
        enum:
        - "usb_storage"
      location:
        type: "string"
        example: "/media/USB_stick/ASAGAM_backup_2011-10-05T14-48-00Z.zip"
        description: "The location of the file to restore the system data from."
  backupRestoreList:
    type: "array"
    items:
      $ref: "#/definitions/backupRestore"
